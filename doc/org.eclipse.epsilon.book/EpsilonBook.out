\BOOKMARK [0][-]{section*.1}{Contents}{}
\BOOKMARK [0][-]{section*.2}{List of Figures}{}
\BOOKMARK [0][-]{section*.3}{List of Tables}{}
\BOOKMARK [0][-]{chapter.1}{Introduction}{}
\BOOKMARK [1][-]{section.1.1}{What is Epsilon?}{chapter.1}
\BOOKMARK [1][-]{section.1.2}{How To Read This Book}{chapter.1}
\BOOKMARK [1][-]{section.1.3}{Questions and Feedback}{chapter.1}
\BOOKMARK [1][-]{section.1.4}{Additional Resources}{chapter.1}
\BOOKMARK [0][-]{chapter.2}{The Epsilon Model Connectivity Layer \(EMC\)}{}
\BOOKMARK [1][-]{section.2.1}{The IModel interface}{chapter.2}
\BOOKMARK [1][-]{section.2.2}{Loading and Persistence}{chapter.2}
\BOOKMARK [1][-]{section.2.3}{Type-related Services}{chapter.2}
\BOOKMARK [1][-]{section.2.4}{Ownership}{chapter.2}
\BOOKMARK [1][-]{section.2.5}{Creation, Deletion and Modifications}{chapter.2}
\BOOKMARK [1][-]{section.2.6}{The IModelTransactionSupport interface}{chapter.2}
\BOOKMARK [1][-]{section.2.7}{The ModelRepository class}{chapter.2}
\BOOKMARK [1][-]{section.2.8}{The ModelGroup class}{chapter.2}
\BOOKMARK [1][-]{section.2.9}{Assumptions about the underlying modelling technologies}{chapter.2}
\BOOKMARK [0][-]{chapter.3}{The Epsilon Object Language \(EOL\)}{}
\BOOKMARK [1][-]{section.3.1}{Module Organization}{chapter.3}
\BOOKMARK [1][-]{section.3.2}{User-Defined Operations}{chapter.3}
\BOOKMARK [1][-]{section.3.3}{Types}{chapter.3}
\BOOKMARK [1][-]{section.3.4}{Expressions}{chapter.3}
\BOOKMARK [1][-]{section.3.5}{Statements}{chapter.3}
\BOOKMARK [1][-]{section.3.6}{Extended Properties}{chapter.3}
\BOOKMARK [1][-]{section.3.7}{Context-Independent User Input}{chapter.3}
\BOOKMARK [1][-]{section.3.8}{Task-Specific Languages}{chapter.3}
\BOOKMARK [0][-]{chapter.4}{The Epsilon Validation Language \(EVL\)}{}
\BOOKMARK [1][-]{section.4.1}{Motivation}{chapter.4}
\BOOKMARK [1][-]{section.4.2}{Abstract Syntax}{chapter.4}
\BOOKMARK [1][-]{section.4.3}{Concrete Syntax}{chapter.4}
\BOOKMARK [1][-]{section.4.4}{Execution Semantics}{chapter.4}
\BOOKMARK [1][-]{section.4.5}{Intra-Model Consistency Checking Example}{chapter.4}
\BOOKMARK [1][-]{section.4.6}{Inter-Model Consistency Checking Example}{chapter.4}
\BOOKMARK [1][-]{section.4.7}{Summary}{chapter.4}
\BOOKMARK [0][-]{chapter.5}{The Epsilon Transformation Language \(ETL\)}{}
\BOOKMARK [1][-]{section.5.1}{Style}{chapter.5}
\BOOKMARK [1][-]{section.5.2}{Source and Target Models}{chapter.5}
\BOOKMARK [1][-]{section.5.3}{Abstract Syntax}{chapter.5}
\BOOKMARK [1][-]{section.5.4}{Concrete Syntax}{chapter.5}
\BOOKMARK [1][-]{section.5.5}{Execution Semantics}{chapter.5}
\BOOKMARK [1][-]{section.5.6}{Interactive Transformations}{chapter.5}
\BOOKMARK [1][-]{section.5.7}{Summary}{chapter.5}
\BOOKMARK [0][-]{chapter.6}{The Epsilon Wizard Language \(EWL\)}{}
\BOOKMARK [1][-]{section.6.1}{Motivation}{chapter.6}
\BOOKMARK [1][-]{section.6.2}{Update Transformations in the Small}{chapter.6}
\BOOKMARK [1][-]{section.6.3}{Abstract Syntax}{chapter.6}
\BOOKMARK [1][-]{section.6.4}{Concrete Syntax}{chapter.6}
\BOOKMARK [1][-]{section.6.5}{Execution Semantics}{chapter.6}
\BOOKMARK [1][-]{section.6.6}{Examples}{chapter.6}
\BOOKMARK [1][-]{section.6.7}{Summary}{chapter.6}
\BOOKMARK [0][-]{chapter.7}{The Epsilon Generation Language \(EGL\)}{}
\BOOKMARK [1][-]{section.7.1}{Abstract Syntax}{chapter.7}
\BOOKMARK [1][-]{section.7.2}{Concrete Syntax}{chapter.7}
\BOOKMARK [1][-]{section.7.3}{Co-ordination}{chapter.7}
\BOOKMARK [1][-]{section.7.4}{Merge Engine}{chapter.7}
\BOOKMARK [1][-]{section.7.5}{Readability and traceability}{chapter.7}
\BOOKMARK [0][-]{chapter.8}{The Epsilon Comparison Language \(ECL\)}{}
\BOOKMARK [1][-]{section.8.1}{Abstract Syntax}{chapter.8}
\BOOKMARK [1][-]{section.8.2}{Concrete Syntax}{chapter.8}
\BOOKMARK [1][-]{section.8.3}{Execution Semantics}{chapter.8}
\BOOKMARK [1][-]{section.8.4}{Fuzzy and Dictionary-based String Matching}{chapter.8}
\BOOKMARK [1][-]{section.8.5}{Interactive Matching}{chapter.8}
\BOOKMARK [1][-]{section.8.6}{Exploiting the Comparison Outcome}{chapter.8}
\BOOKMARK [0][-]{chapter.9}{The Epsilon Merging Language \(EML\)}{}
\BOOKMARK [1][-]{section.9.1}{Motivation}{chapter.9}
\BOOKMARK [1][-]{section.9.2}{Realizing a Model Merging Process with Epsilon}{chapter.9}
\BOOKMARK [1][-]{section.9.3}{Abstract Syntax}{chapter.9}
\BOOKMARK [1][-]{section.9.4}{Concrete Syntax}{chapter.9}
\BOOKMARK [1][-]{section.9.5}{Execution Semantics}{chapter.9}
\BOOKMARK [1][-]{section.9.6}{Homogeneous Model Merging Example}{chapter.9}
\BOOKMARK [0][-]{chapter.10}{Implementing a New Task-Specific Language}{}
\BOOKMARK [1][-]{section.10.1}{Identifying the need for a new language}{chapter.10}
\BOOKMARK [1][-]{section.10.2}{Eliciting higher-level constructs from recurring patterns}{chapter.10}
\BOOKMARK [1][-]{section.10.3}{Implement Execution Semantics and Scheduling}{chapter.10}
\BOOKMARK [1][-]{section.10.4}{Overriding Semantics}{chapter.10}
\BOOKMARK [0][-]{chapter.11}{Orchestration Workflow}{}
\BOOKMARK [1][-]{section.11.1}{Motivation}{chapter.11}
\BOOKMARK [1][-]{section.11.2}{The ANT Tool}{chapter.11}
\BOOKMARK [1][-]{section.11.3}{Integration Challenges}{chapter.11}
\BOOKMARK [1][-]{section.11.4}{Framework Design and Core Tasks}{chapter.11}
\BOOKMARK [1][-]{section.11.5}{Model Management Tasks}{chapter.11}
\BOOKMARK [1][-]{section.11.6}{Chapter Summary}{chapter.11}
\BOOKMARK [0][-]{chapter.12}{The Epsilon Unit Testing Framework \(EUnit\)}{}
\BOOKMARK [1][-]{section.12.1}{Motivation}{chapter.12}
\BOOKMARK [1][-]{section.12.2}{Test Organization}{chapter.12}
\BOOKMARK [1][-]{section.12.3}{Test Specification}{chapter.12}
\BOOKMARK [1][-]{section.12.4}{Examples}{chapter.12}
\BOOKMARK [1][-]{section.12.5}{Extending EUnit}{chapter.12}
\BOOKMARK [1][-]{section.12.6}{Summary}{chapter.12}
\BOOKMARK [0][-]{section*.39}{Bibliography}{}
